Date = col_date("%d/%m/%Y"),
Time = col_time(format = "%H:%M:%S"),
Global_active_power = col_double(),
Global_reactive_power = col_double(),
Voltage = col_double(),
Global_intensity = col_double(),
Sub_metering_1 = col_double(),
Sub_metering_2 = col_double(),
Sub_metering_3 = col_double()
)
)
data <- read_csv(
"~/Desktop/year 2 sem 3/cmpt 318/A1/Group_Assignment_1_data.txt",
col_types = cols(
Date = col_date("%d/%m/%Y"),
Time = col_time(format = "%H:%M:%S"),
Global_active_power = col_double(),
Global_reactive_power = col_double(),
Voltage = col_double(),
Global_intensity = col_double(),
Sub_metering_1 = col_double(),
Sub_metering_2 = col_double(),
Sub_metering_3 = col_double()
)
)
data <- read_csv(
"~/Desktop/year 2 sem 3/cmpt 318/A1/Group_Assignment_1_data.txt",
col_types = cols(
Date = col_date("%d/%m/%Y"),
Time = col_time(format = "%H:%M:%S"),
Global_active_power = col_double(),
Global_reactive_power = col_double(),
Voltage = col_double(),
Global_intensity = col_double(),
Sub_metering_1 = col_double(),
Sub_metering_2 = col_double(),
Sub_metering_3 = col_double()
)
)
data <- read_csv(
"~bhakti/Desktop/year 2 sem 3/cmpt 318/A1/Group_Assignment_1_data.txt",
col_types = cols(
Date = col_date("%d/%m/%Y"),
Time = col_time(format = "%H:%M:%S"),
Global_active_power = col_double(),
Global_reactive_power = col_double(),
Voltage = col_double(),
Global_intensity = col_double(),
Sub_metering_1 = col_double(),
Sub_metering_2 = col_double(),
Sub_metering_3 = col_double()
)
)
data <- read_csv(
"~/bhakti/Desktop/year 2 sem 3/cmpt 318/A1/Group_Assignment_1_data.txt",
col_types = cols(
Date = col_date("%d/%m/%Y"),
Time = col_time(format = "%H:%M:%S"),
Global_active_power = col_double(),
Global_reactive_power = col_double(),
Voltage = col_double(),
Global_intensity = col_double(),
Sub_metering_1 = col_double(),
Sub_metering_2 = col_double(),
Sub_metering_3 = col_double()
)
)
getwd()
data <- read_csv(
"~/bhakti/Desktop/year 2 sem 3/cmpt 318/A1/Group_Assignment_1_data.txt",
col_types = cols(
Date = col_date("%d/%m/%Y"),
Time = col_time(format = "%H:%M:%S"),
Global_active_power = col_double(),
Global_reactive_power = col_double(),
Voltage = col_double(),
Global_intensity = col_double(),
Sub_metering_1 = col_double(),
Sub_metering_2 = col_double(),
Sub_metering_3 = col_double()
)
)
getwd()
data <- read_csv(
"Group_Assignment_1_data.txt",
col_types = cols(
Date = col_date("%d/%m/%Y"),
Time = col_time(format = "%H:%M:%S"),
Global_active_power = col_double(),
Global_reactive_power = col_double(),
Voltage = col_double(),
Global_intensity = col_double(),
Sub_metering_1 = col_double(),
Sub_metering_2 = col_double(),
Sub_metering_3 = col_double()
)
)
getwd()
setwd("/Users/bhakti")
setwd("/Users/bhakti/Desktop/year 2 sem 3/cmpt 318/A1")
getwd
data <- read_csv(
"Group_Assignment_1_data.txt",
col_types = cols(
Date = col_date("%d/%m/%Y"),
Time = col_time(format = "%H:%M:%S"),
Global_active_power = col_double(),
Global_reactive_power = col_double(),
Voltage = col_double(),
Global_intensity = col_double(),
Sub_metering_1 = col_double(),
Sub_metering_2 = col_double(),
Sub_metering_3 = col_double()
)
)
getwd()
data <- read_csv(
"Group_Assignment_1_data.txt",
col_types = cols(
Date = col_date("%d/%m/%Y"),
Time = col_time(format = "%H:%M:%S"),
Global_active_power = col_double(),
Global_reactive_power = col_double(),
Voltage = col_double(),
Global_intensity = col_double(),
Sub_metering_1 = col_double(),
Sub_metering_2 = col_double(),
Sub_metering_3 = col_double()
)
)
data <- read_csv(
"/Users/bhakti/Desktop/year 2 sem 3/cmpt 318/A1/Group_Assignment_1_data.txt",
col_types = cols(
Date = col_date("%d/%m/%Y"),
Time = col_time(format = "%H:%M:%S"),
Global_active_power = col_double(),
Global_reactive_power = col_double(),
Voltage = col_double(),
Global_intensity = col_double(),
Sub_metering_1 = col_double(),
Sub_metering_2 = col_double(),
Sub_metering_3 = col_double()
)
)
#getwd()
s#etwd("/Users/bhakti/Desktop/year 2 sem 3/cmpt 318/A1")
#twd()
data <- read_csv(
"/Users/bhakti/Desktop/year 2 sem 3/cmpt 318/A1/Group_Assignment_1_data.txt",
col_types = cols(
Date = col_date("%d/%m/%Y"),
Time = col_time(format = "%H:%M:%S"),
Global_active_power = col_double(),
Global_reactive_power = col_double(),
Voltage = col_double(),
Global_intensity = col_double(),
Sub_metering_1 = col_double(),
Sub_metering_2 = col_double(),
Sub_metering_3 = col_double()
)
)
row = data[data$Date >('2007-04-08') & data$Date < ('2007-04-17'),]
#getwd()
#etwd("/Users/bhakti/Desktop/year 2 sem 3/cmpt 318/A1")
#twd()
data <- read_csv(
"/Users/bhakti/Desktop/year 2 sem 3/cmpt 318/A1/Group_Assignment_1_data.txt",
col_types = cols(
Date = col_date("%d/%m/%Y"),
Time = col_time(format = "%H:%M:%S"),
Global_active_power = col_double(),
Global_reactive_power = col_double(),
Voltage = col_double(),
Global_intensity = col_double(),
Sub_metering_1 = col_double(),
Sub_metering_2 = col_double(),
Sub_metering_3 = col_double()
)
)
data1 <- read.csv(file.choose())
View(data1)
View(data1)
data1 <- read.csv(file.choose(), col_types = cols(
Date = col_date("%d/%m/%Y"),
Time = col_time(format = "%H:%M:%S"),
Global_active_power = col_double(),
Global_reactive_power = col_double(),
Voltage = col_double(),
Global_intensity = col_double(),
Sub_metering_1 = col_double(),
Sub_metering_2 = col_double(),
Sub_metering_3 = col_double()
))
getwd()
#getwd()
#etwd("/Users/bhakti/Desktop/year 2 sem 3/cmpt 318/A1")
#twd()
data <- read_csv(
"Group_Assignment_1_data.txt",
col_types = cols(
Date = col_date("%d/%m/%Y"),
Time = col_time(format = "%H:%M:%S"),
Global_active_power = col_double(),
Global_reactive_power = col_double(),
Voltage = col_double(),
Global_intensity = col_double(),
Sub_metering_1 = col_double(),
Sub_metering_2 = col_double(),
Sub_metering_3 = col_double()
)
)
#getwd()
#etwd("/Users/bhakti/Desktop/year 2 sem 3/cmpt 318/A1")
#twd()
data <- read_csv(
'Group_Assignment_1_data.txt',
col_types = cols(
Date = col_date("%d/%m/%Y"),
Time = col_time(format = "%H:%M:%S"),
Global_active_power = col_double(),
Global_reactive_power = col_double(),
Voltage = col_double(),
Global_intensity = col_double(),
Sub_metering_1 = col_double(),
Sub_metering_2 = col_double(),
Sub_metering_3 = col_double()
)
)
#getwd()
#etwd("/Users/bhakti/Desktop/year 2 sem 3/cmpt 318/A1")
#twd()
data <- read_csv(
'Group_Assignment_1_Dataset.txt',
col_types = cols(
Date = col_date("%d/%m/%Y"),
Time = col_time(format = "%H:%M:%S"),
Global_active_power = col_double(),
Global_reactive_power = col_double(),
Voltage = col_double(),
Global_intensity = col_double(),
Sub_metering_1 = col_double(),
Sub_metering_2 = col_double(),
Sub_metering_3 = col_double()
)
)
#getwd()
#etwd("/Users/bhakti/Desktop/year 2 sem 3/cmpt 318/A1")
#twd()
data <- read_csv(
'Group_Assignment_1_Dataset.txt',
col_types = cols(
Date = col_date("%d/%m/%Y"),
Time = col_time(format = "%H:%M:%S"),
Global_active_power = col_double(),
Global_reactive_power = col_double(),
Voltage = col_double(),
Global_intensity = col_double(),
Sub_metering_1 = col_double(),
Sub_metering_2 = col_double(),
Sub_metering_3 = col_double()
)
)
row = data[data$Date > ('2020-04-08') & data$Date< ('2020-04-17'),]
row = data[data$Date > ('2007-04-08') & data$Date< ('2007-04-17'),]
A = row$Global_active_power
B = row$Global_reactive_power
C = row$Voltage
mean(A)
mean(B,na.rm = TRUE)
mean(C,na.rm = TRUE)
exp(mean(log(A)))
exp(mean(log(B)))
exp(mean(log(C)))
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
getmode(A)
getmode(B)
getmode(C)
sd(A)
sd(B)
sd(C)
weekend <- row[row$Date == ("2007/04/14")|row$Date == ("2007/04/15"),]
weekday <- row[row$Date != ("2007/04/14")&row$Date != ("2007/04/15"),]
class(weekday$Time)
weekday_day <- weekday[weekday$Time > "6:00:00" & weekday$Time<("17:59:00", "%H:%M:%S"),]
weekday_day <- weekday[weekday$Time > "6:00:00" & weekday$Time<("17:59:00"),]
View(weekday_day)
View(weekday_day)
View(weekday)
View(weekday)
weekday_day <- weekday[weekday$Time > hours(6)+minutes(00)+seconds(00) & weekday$Time<(hours(17)+minutes(59)+seconds(00)),]
weekday_night <- weekday[weekday$Time >  hours(18)+minutes(00)+seconds(00)| weekday$Time <  hours(5)+minutes(59)+seconds(00),]
weekend_day <- weekend[weekend$Time >  hours(6)+minutes(00)+seconds(00) & weekend$Time< hours(17)+minutes(59)+seconds(00),]
weekend_night <- weekend[weekend$Time >  hours(18)+minutes(00)+seconds(00)| weekend$Time <  hours(5)+minutes(59)+seconds(00),]
min(weekday_day$Global_active_power)
max(weekday_day$Global_active_power)
min(weekday_day$Global_reactive_power)
max(weekday_day$Global_reactive_power)
min(weekday_night$Global_active_power)
max(weekday_night$Global_active_power)
min(weekday_night$Global_reactive_power)
max(weekday_night$Global_reactive_power)
min(weekend_day$Global_active_power)
max(weekend_day$Global_active_power)
min(weekend_day$Global_reactive_power)
max(weekend_day$Global_reactive_power)
min(weekend_night$Global_active_power)
max(weekend_night$Global_active_power)
min(weekend_night$Global_reactive_power)
max(weekend_night$Global_reactive_power)
corr_row <- row
class(corr_row)
corr_row$Date <- NULL
corr_row$Time <- NULL
cor(corr_row,method="pearson")
group_weekend_day = weekend_day %>% group_by(Time)  %>%
summarise(Avg_Global_intensity = mean(Global_intensity))
group_weekend_night = weekend_night %>% group_by(Time)  %>%
summarise(Avg_Global_intensity = mean(Global_intensity))
group_weekday_day = weekday_day %>% group_by(Time)  %>%
summarise(Avg_Global_intensity = mean(Global_intensity))
group_weekday_night = weekday_night %>% group_by(Time)  %>%
summarise(Avg_Global_intensity = mean(Global_intensity))
View(group_weekday_day)
View(group_weekday_day)
ggplot(data = group_weekday_day, mapping = aes(x=Time, y = Global_intensity_avg))+
geom_line()+
geom_smooth(se = FALSE, colour = "red", method = "lm")+
stat_smooth(se = FALSE, method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
labs(title = "Weekday Evening", y = "Global Intensity")
View(group_weekend_day)
View(group_weekend_day)
ggplot(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity))+
geom_line()+
geom_smooth(se = FALSE, colour = "red", method = "lm")+
stat_smooth(se = FALSE, method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
labs(title = "Weekday Evening", y = "Global Intensity")
ggplot(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity))+
geom_line()+
geom_smooth(se = FALSE, colour = "red", method = "lm")+
stat_smooth(se = FALSE, colour = "#C4961A",method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
labs(title = "Weekday Evening", y = "Global Intensity")
ggplot( )+
geom_line(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity))+
geom_smooth(se = FALSE, colour = "red", method = "lm")+
stat_smooth(se = FALSE, colour = "#C4961A",method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
labs(title = "Weekday Day", y = "Global Intensity")+
geom_line(data = group_weekend_day, mapping = aes(x=Time, y = Avg_Global_intensity))+
geom_smooth(se = FALSE, colour = "blue", method = "lm")+
stat_smooth(se = FALSE, colour = "#00AFBB",method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
labs(title = "Weekday Day", y = "Global Intensity")
stat_smooth(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity,se = FALSE, colour = "#C4961A",method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
ggplot( )+
geom_line(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity))+
geom_smooth(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity,se = FALSE, colour = "red", method = "lm"))+
stat_smooth(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity,se = FALSE, colour = "#C4961A",method = lm, formula = y ~ poly(x, 5, raw = TRUE))) +
labs(title = "Weekday Day", y = "Global Intensity")+
geom_line(data = group_weekend_day, mapping = aes(x=Time, y = Avg_Global_intensity))+
geom_smooth(se = FALSE, colour = "blue", method = "lm")+
stat_smooth(se = FALSE, colour = "#00AFBB",method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
labs(title = "Weekday Day", y = "Global Intensity")
ggplot( )+
geom_line(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity))+
geom_smooth(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity,se = FALSE, colour = "red", method = "lm"))+
stat_smooth(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity,se = FALSE, colour = "#C4961A",method = lm, formula = y ~ poly(x, 5, raw = TRUE))) +
labs(title = "Weekday Day", y = "Global Intensity")+
geom_line(data = group_weekend_day, mapping = aes(x=Time, y = Avg_Global_intensity))+
geom_smooth(data = group_weekend_day, mapping = aes(x=Time, y = Avg_Global_intensityse = FALSE, colour = "blue", method = "lm"))+
stat_smooth(data = group_weekend_day, mapping = aes(x=Time, y = Avg_Global_intensityse = FALSE, colour = "#00AFBB",method = lm, formula = y ~ poly(x, 5, raw = TRUE))) +
labs(title = "Weekday Day", y = "Global Intensity")
ggplot( )+
geom_line(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity))+
geom_smooth(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity),se = FALSE, colour = "red", method = "lm")+
stat_smooth(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity,se = FALSE, colour = "#C4961A",method = lm, formula = y ~ poly(x, 5, raw = TRUE))) +
labs(title = "Weekday Day", y = "Global Intensity")+
geom_line(data = group_weekend_day, mapping = aes(x=Time, y = Avg_Global_intensity))+
geom_smooth(data = group_weekend_day, mapping = aes(x=Time, y = Avg_Global_intensityse = FALSE, colour = "blue", method = "lm"))+
stat_smooth(data = group_weekend_day, mapping = aes(x=Time, y = Avg_Global_intensityse = FALSE, colour = "#00AFBB",method = lm, formula = y ~ poly(x, 5, raw = TRUE))) +
labs(title = "Weekday Day", y = "Global Intensity")
ggplot( )+
geom_line(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity))+
geom_smooth(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity),se = FALSE, colour = "red", method = "lm")+
stat_smooth(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity),se = FALSE, colour = "#C4961A",method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
labs(title = "Weekday Day", y = "Global Intensity")+
geom_line(data = group_weekend_day, mapping = aes(x=Time, y = Avg_Global_intensity))+
geom_smooth(data = group_weekend_day, mapping = aes(x=Time, y = Avg_Global_intensity),se = FALSE, colour = "blue", method = "lm")+
stat_smooth(data = group_weekend_day, mapping = aes(x=Time, y = Avg_Global_intensity), se = FALSE, colour = "#00AFBB",method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
labs(title = "Weekday Day", y = "Global Intensity")
ggplot( )+
geom_line(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity), colour = "#C3D7A4")+
geom_smooth(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity),se = FALSE, colour = "red", method = "lm")+
stat_smooth(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity),se = FALSE, colour = "#C4961A",method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
labs(title = "Weekday Day", y = "Global Intensity")+
geom_line(data = group_weekend_day, mapping = aes(x=Time, y = Avg_Global_intensity),colour = "#52854C")+
geom_smooth(data = group_weekend_day, mapping = aes(x=Time, y = Avg_Global_intensity),se = FALSE, colour = "blue", method = "lm")+
stat_smooth(data = group_weekend_day, mapping = aes(x=Time, y = Avg_Global_intensity), se = FALSE, colour = "#00AFBB",method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
labs(title = "Weekday Day", y = "Global Intensity")
ggplot( )+
geom_line(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#C3D7A4"))+
geom_smooth(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "red"),se = FALSE, method = "lm")+
stat_smooth(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#C4961A"),se = FALSE,method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
labs(title = "Weekday Day", y = "Global Intensity")+
geom_line(data = group_weekend_day, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#52854C"))+
geom_smooth(data = group_weekend_day, mapping = aes(x=Time, y = Avg_Global_intensity, colour = "blue"),se = FALSE, method = "lm")+
stat_smooth(data = group_weekend_day, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#00AFBB"), se = FALSE,method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
labs(title = "Weekday Day", y = "Global Intensity")
ggplot( )+
geom_line(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#C3D7A4"))+
geom_smooth(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "red"),se = FALSE, method = "lm")+
stat_smooth(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#C4961A"),se = FALSE,method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
labs(title = "Weekday Day", y = "Global Intensity")+ scale_color_manual(labels = c("Weekday_day", "Linear weekday_day","Polynomial weekday day","Weekend day","Linear weekend day","Polynomial weekend day"), values = c("#C3D7A4", "red","#C4961A","52854C","blue","#00AFBB"))
ggplot( )+
geom_line(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#C3D7A4"))+
geom_smooth(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "red"),se = FALSE, method = "lm")+
stat_smooth(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#C4961A"),se = FALSE,method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
geom_line(data = group_weekend_day, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#52854C"))+
geom_smooth(data = group_weekend_day, mapping = aes(x=Time, y = Avg_Global_intensity, colour = "blue"),se = FALSE, method = "lm")+
stat_smooth(data = group_weekend_day, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#00AFBB"), se = FALSE,method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
labs(title = "Weekday Day", y = "Global Intensity")+ scale_color_manual(labels = c("Weekday_day", "Linear weekday_day","Polynomial weekday day","Weekend day","Linear weekend day","Polynomial weekend day"), values = c("#C3D7A4", "red","#C4961A","52854C","blue","#00AFBB"))
graph1 <- ggplot( )+
geom_line(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#C3D7A4"))+
geom_smooth(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "red"),se = FALSE, method = "lm")+
stat_smooth(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#C4961A"),se = FALSE,method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
geom_line(data = group_weekend_day, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#52854C"))+
geom_smooth(data = group_weekend_day, mapping = aes(x=Time, y = Avg_Global_intensity, colour = "blue"),se = FALSE, method = "lm")+
stat_smooth(data = group_weekend_day, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#00AFBB"), se = FALSE,method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
labs(title = "Weekday Day", y = "Global Intensity")+ scale_color_manual(labels = c("Weekday_day", "Linear weekday_day","Polynomial weekday day","Weekend day","Linear weekend day","Polynomial weekend day"), values = c("#C3D7A4", "red","#C4961A","52854C","blue","#00AFBB"))
graph2 <- ggplot( )+
geom_line(data = group_weekday_night, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#C3D7A4"))+
geom_smooth(data = group_weekday_night, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "red"),se = FALSE, method = "lm")+
stat_smooth(data = group_weekday_night, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#C4961A"),se = FALSE,method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
geom_line(data = group_weekend_night, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#52854C"))+
geom_smooth(data = group_weekend_night, mapping = aes(x=Time, y = Avg_Global_intensity, colour = "blue"),se = FALSE, method = "lm")+
stat_smooth(data = group_weekend_night, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#00AFBB"), se = FALSE,method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
labs(title = "Weekday Day", y = "Global Intensity")+ scale_color_manual(labels = c("Weekday_night", "Linear weekday_night","Polynomial weekday night","Weekend night","Linear weekend night","Polynomial weekend night"), values = c("#C3D7A4", "red","#C4961A","52854C","blue","#00AFBB"))
View(graph2)
graph2 <- ggplot( )+
geom_line(data = group_weekday_night, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#C3D7A4"))+
geom_smooth(data = group_weekday_night, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "red"),se = FALSE, method = "lm")+
stat_smooth(data = group_weekday_night, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#C4961A"),se = FALSE,method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
geom_line(data = group_weekend_night, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#52854C"))+
geom_smooth(data = group_weekend_night, mapping = aes(x=Time, y = Avg_Global_intensity, colour = "blue"),se = FALSE, method = "lm")+
stat_smooth(data = group_weekend_night, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#00AFBB"), se = FALSE,method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
labs(title = "Weekday Night", y = "Global Intensity")+ scale_color_manual(labels = c("Weekday_night", "Linear weekday_night","Polynomial weekday night","Weekend night","Linear weekend night","Polynomial weekend night"), values = c("#C3D7A4", "red","#C4961A","52854C","blue","#00AFBB"))
graph2 <- ggplot( )+
geom_line(data = group_weekday_night, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#C3D7A4"))+
geom_smooth(data = group_weekday_night, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "red"),se = FALSE, method = "lm")+
stat_smooth(data = group_weekday_night, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#C4961A"),se = FALSE,method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
geom_line(data = group_weekend_night, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#52854C"))+
geom_smooth(data = group_weekend_night, mapping = aes(x=Time, y = Avg_Global_intensity, colour = "blue"),se = FALSE, method = "lm")+
stat_smooth(data = group_weekend_night, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#00AFBB"), se = FALSE,method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
labs(title = "Weekday Night", y = "Global Intensity")+ scale_color_manual(labels = c("Weekday_night", "Linear weekday_night","Polynomial weekday night","Weekend night","Linear weekend night","Polynomial weekend night"), values = c("#C3D7A4", "red","#C4961A","52854C","blue","#00AFBB"))
ggplot( )+
geom_line(data = group_weekday_night, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#C3D7A4"))+
geom_smooth(data = group_weekday_night, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "red"),se = FALSE, method = "lm")+
stat_smooth(data = group_weekday_night, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#C4961A"),se = FALSE,method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
geom_line(data = group_weekend_night, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#52854C"))+
geom_smooth(data = group_weekend_night, mapping = aes(x=Time, y = Avg_Global_intensity, colour = "blue"),se = FALSE, method = "lm")+
stat_smooth(data = group_weekend_night, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#00AFBB"), se = FALSE,method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
labs(title = "Weekday Night", y = "Global Intensity")+ scale_color_manual(labels = c("Weekday_night", "Linear weekday_night","Polynomial weekday night","Weekend night","Linear weekend night","Polynomial weekend night"), values = c("#C3D7A4", "red","#C4961A","52854C","blue","#00AFBB"))
ggplot( )+
geom_line(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#C3D7A4"))+
geom_smooth(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "red"),se = FALSE, method = "lm")+
stat_smooth(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#C4961A"),se = FALSE,method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
geom_line(data = group_weekend_day, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#52854C"))+
geom_smooth(data = group_weekend_day, mapping = aes(x=Time, y = Avg_Global_intensity, colour = "blue"),se = FALSE, method = "lm")+
stat_smooth(data = group_weekend_day, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#00AFBB"), se = FALSE,method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
labs(title = "Weekday/Weekend Day", y = "Global Intensity")+ scale_color_manual(labels = c("Weekday_day", "Linear weekday_day","Polynomial weekday day","Weekend day","Linear weekend day","Polynomial weekend day"), values = c("#C3D7A4", "red","#C4961A","52854C","blue","#00AFBB"))
ggplot( )+
geom_line(data = group_weekday_night, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#C3D7A4"))+
geom_smooth(data = group_weekday_night, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "red"),se = FALSE, method = "lm")+
stat_smooth(data = group_weekday_night, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#C4961A"),se = FALSE,method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
geom_line(data = group_weekend_night, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#52854C"))+
geom_smooth(data = group_weekend_night, mapping = aes(x=Time, y = Avg_Global_intensity, colour = "blue"),se = FALSE, method = "lm")+
stat_smooth(data = group_weekend_night, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#00AFBB"), se = FALSE,method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
labs(title = "Weekday/Weekend Night", y = "Global Intensity")+ scale_color_manual(labels = c("Weekday_night", "Linear weekday_night","Polynomial weekday night","Weekend night","Linear weekend night","Polynomial weekend night"), values = c("#C3D7A4", "red","#C4961A","52854C","blue","#00AFBB"))
min(weekday_day$Global_active_power)
max(weekday_day$Global_active_power)
min(weekday_day$Global_reactive_power)
max(weekday_day$Global_reactive_power)
min(weekday_night$Global_active_power)
max(weekday_night$Global_active_power)
min(weekday_night$Global_reactive_power)
max(weekday_night$Global_reactive_power)
min(weekend_day$Global_active_power)
max(weekend_day$Global_active_power)
min(weekend_day$Global_reactive_power)
max(weekend_day$Global_reactive_power)
min(weekend_night$Global_active_power)
max(weekend_night$Global_active_power)
min(weekend_night$Global_reactive_power)
max(weekend_night$Global_reactive_power)
ggplot( )+
geom_line(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#C3D7A4"))+
geom_smooth(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "red"),se = FALSE, method = "lm")+
stat_smooth(data = group_weekday_day, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#C4961A"),se = FALSE,method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
geom_line(data = group_weekend_day, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#52854C"))+
geom_smooth(data = group_weekend_day, mapping = aes(x=Time, y = Avg_Global_intensity, colour = "blue"),se = FALSE, method = "lm")+
stat_smooth(data = group_weekend_day, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#00AFBB"), se = FALSE,method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
labs(title = "Weekday/Weekend Day", y = "Global Intensity")+ scale_color_manual(labels = c("Polynomial weekday day", "Weekday_day","Weekend day","Polynomial Weekend day","Linear weekend day","Linear weekday day"), values = c("#C3D7A4", "red","#C4961A","52854C","blue","#00AFBB"))
ggplot( )+
geom_line(data = group_weekday_night, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#C3D7A4"))+
geom_smooth(data = group_weekday_night, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "red"),se = FALSE, method = "lm")+
stat_smooth(data = group_weekday_night, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#C4961A"),se = FALSE,method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
geom_line(data = group_weekend_night, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#52854C"))+
geom_smooth(data = group_weekend_night, mapping = aes(x=Time, y = Avg_Global_intensity, colour = "blue"),se = FALSE, method = "lm")+
stat_smooth(data = group_weekend_night, mapping = aes(x=Time, y = Avg_Global_intensity,colour = "#00AFBB"), se = FALSE,method = lm, formula = y ~ poly(x, 5, raw = TRUE)) +
labs(title = "Weekday/Weekend Night", y = "Global Intensity")+ scale_color_manual(labels = c("Polynomial weekday night", "Weekday_night","Weekend night","Polynomial Weekend night","Linear weekend night","Linear weekday night"), values = c("#C3D7A4", "red","#C4961A","52854C","blue","#00AFBB"))
View(group_weekday_night)
View(group_weekday_night)
